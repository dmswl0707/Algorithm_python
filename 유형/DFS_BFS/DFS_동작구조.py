'''
DFS 동작구조

DFS는 스택 방식을 따름 (피로 FILO, 리포 LIFO)
1. 탐색 시작 노드를 스택에 저장하고 방문 처리
2. 시작 지점에서 방문하지 않은 인접 노드가 있다면, 스택에 넣고 방문 처리
3. 방문한 인접노드 밖에 없다면, 스택에서 꺼냄. (2-3번을 반복하면 모든 노드를 순회)
'''

# DFS 메서드 정의
# 스택 구조 이용, 재귀용법 이용 -> 재귀용법 대신 스택구조로만 활용하면 시간복잡도 줄일 수 있음 **
# 방문 처리에 사용
def dfs(graph, v, visited):

    # 현재 노드 방문 처리
    visited[v]=True
    print(v, end=' ')
    # 현재 노드와 방문한 노드를 재귀적으로 호출
    for i in graph[v]:
        if not visited[i]:
            dfs(graph, i, visited)

# 그래프 정의
graph =[
    [],
    [2, 3, 8],
    [1, 7],
    [1, 4, 5],
    [3, 5],
    [3, 4],
    [7],
    [2, 6, 8],
    [1, 7]
]

# 방문 정보를 리스트에 저장, 초기에 False로 설정
visited = [False] * 9

dfs(graph, 1, visited)